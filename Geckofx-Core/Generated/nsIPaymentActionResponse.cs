// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIPaymentActionResponse.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// The base interface of response data for the specified payment method.
    /// The response data is the content of the PaymentResponse's detail attribute.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2a338575-c688-40ee-a157-7488ab292ef2")]
	public interface nsIPaymentResponseData
	{
		
		/// <summary>
        /// The response data type.
        /// Using the above defined consts(GENERAL_RESPONSE or BASICCARD_RESPONSE).
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetTypeAttribute();
		
		/// <summary>
        /// The initial method.
        /// @param aType - the response data type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init(uint aType);
	}
	
	/// <summary>nsIPaymentResponseDataConsts </summary>
	public class nsIPaymentResponseDataConsts
	{
		
		// <summary>
        // The consts for representing the response data type.
        // GENERAL_RESPONSE is the general purpose response data type. Except basic
        // card response data, all response data should belong to this type.
        // BASICCARD_RESPONSE is a special response data type for basic card response.
        // </summary>
		public const long GENERAL_RESPONSE = 0;
		
		// 
		public const long BASICCARD_RESPONSE = 1;
	}
	
	/// <summary>
    /// The general purpose response data.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b986773e-2b30-4ed2-b8fe-6a96631c8000")]
	public interface nsIGeneralResponseData : nsIPaymentResponseData
	{
		
		/// <summary>
        /// The response data type.
        /// Using the above defined consts(GENERAL_RESPONSE or BASICCARD_RESPONSE).
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// The initial method.
        /// @param aType - the response data type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Init(uint aType);
		
		/// <summary>
        /// The stringified response data.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDataAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aData);
		
		/// <summary>
        /// The initial method for nsIGeneralResponseData.
        /// @param aData - the javascript object of the content.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InitData(ref Gecko.JsVal aData, System.IntPtr jsContext);
	}
	
	/// <summary>
    /// The basic card response data.
    /// Since PaymentAddress is an no constructor interface type, UI code can not
    /// easy create PaymentAddress by calling new PaymentAddress().
    /// Unfortunately, BasicCardResponse has a PaymentAddress attribute, billingAddress
    /// , it means UI can not create BsaicCardResponse by calling the init() with a
    /// given JSObject directly, because PaymentAddress creation in JS code is hard.
    /// To let UI code can create BasicCardResponse easier, nsIBasicCardResponse is
    /// provided for UI by passing the raw data of BasicCardResponse,
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("0d55a5e6-d185-44f0-b992-a8e1321e4bce")]
	public interface nsIBasicCardResponseData : nsIPaymentResponseData
	{
		
		/// <summary>
        /// The response data type.
        /// Using the above defined consts(GENERAL_RESPONSE or BASICCARD_RESPONSE).
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// The initial method.
        /// @param aType - the response data type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Init(uint aType);
		
		/// <summary>
        /// The stringified response data.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDataAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aData);
		
		/// <summary>
        /// The initial method for nsIBasicCardResponseData.
        /// @param aCardholderName   - the cardholder name.
        /// @param aCardNumber       - the card number.
        /// @param aExpiryMonth      - the expiry month.
        /// @param aExpiryYear       - the expiry year.
        /// @param aCardSecurityCode - the card security code.
        /// @param aBillingAddreess  - the billing address.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InitData([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aCardholderName, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aCardNumber, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aExpiryMonth, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aExpiryYear, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aCardSecurityCode, [MarshalAs(UnmanagedType.Interface)] nsIPaymentAddress billingAddress);
	}
	
	/// <summary>
    /// The base interface of user's response.
    /// Payment UI should create different sub-interface of nsIPaymentActionResponse
    /// according to user's action, and call nsIPaymentRequestService::respondPayment
    /// with the created action to inform the merchant.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a607c095-ef60-4a9b-a3d0-0506c60728b3")]
	public interface nsIPaymentActionResponse
	{
		
		/// <summary>
        /// The payment request identity.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetRequestIdAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId);
		
		/// <summary>
        /// The response type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetTypeAttribute();
	}
	
	/// <summary>nsIPaymentActionResponseConsts </summary>
	public class nsIPaymentActionResponseConsts
	{
		
		// <summary>
        // The response type.
        // Align type to nsIPaymentActionRequest types,
        // where 1 is for payment request creation.
        // the action expects no response from UI module.
        // </summary>
		public const long NO_TYPE = 0;
		
		// <summary>
        // const uint32_t CREATE_ACTION = 1;
        // </summary>
		public const long CANMAKE_ACTION = 2;
		
		// 
		public const long SHOW_ACTION = 3;
		
		// 
		public const long ABORT_ACTION = 4;
		
		// 
		public const long COMPLETE_ACTION = 5;
		
		// <summary>
        // The abort status.
        // </summary>
		public const long ABORT_SUCCEEDED = 1;
		
		// 
		public const long ABORT_FAILED = 0;
		
		// <summary>
        // The payment status.
        // </summary>
		public const long PAYMENT_REJECTED = 0;
		
		// 
		public const long PAYMENT_ACCEPTED = 1;
		
		// 
		public const long PAYMENT_NOTSUPPORTED = 2;
		
		// <summary>
        // The complete status.
        // </summary>
		public const long COMPLETE_SUCCEEDED = 1;
		
		// 
		public const long COMPLETE_FAILED = 0;
	}
	
	/// <summary>
    /// The response for canMakePayment action.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("52fc3f9f-c0cb-4874-b3d4-ee4b6e9cbe9c")]
	public interface nsIPaymentCanMakeActionResponse : nsIPaymentActionResponse
	{
		
		/// <summary>
        /// The payment request identity.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetRequestIdAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId);
		
		/// <summary>
        /// The response type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// The result of canMakePayment action.
        /// </summary>
		[return: MarshalAs(UnmanagedType.U1)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetResultAttribute();
		
		/// <summary>
        /// The initial method.
        /// @param aRequestId - the request identifier of the payment request.
        /// @param aResult - the canMakePayment result.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId, [MarshalAs(UnmanagedType.U1)] bool aResult);
	}
	
	/// <summary>
    /// The response for show action.
    /// Notice that to represent user's cancel, we should use nsIPaymentShowActionResponse
    /// with PAYMENT_REJECTED status, not nsIPaymentAbortActionResponse.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("184385cb-2d35-4b99-a9a3-7c780bf66b9b")]
	public interface nsIPaymentShowActionResponse : nsIPaymentActionResponse
	{
		
		/// <summary>
        /// The payment request identity.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetRequestIdAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId);
		
		/// <summary>
        /// The response type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// Accept status of the payment.
        /// Using the defined consts(PAYMENT_XXX) in nsIPaymentActionResponse.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetAcceptStatusAttribute();
		
		/// <summary>
        /// The decided payment method name. i.e. "basic-card".
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMethodNameAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aMethodName);
		
		/// <summary>
        /// The data needed by the payment method. (it must be serializable)
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDataAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aData);
		
		/// <summary>
        /// The payer name information.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPayerNameAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerName);
		
		/// <summary>
        /// The payer email information.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPayerEmailAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerEmail);
		
		/// <summary>
        /// The payer phone information.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPayerPhoneAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerPhone);
		
		/// <summary>
        /// The initial method.
        /// @param aRequestId - the request identifier of the payment request.
        /// @param aAcceptStatus - the payment status.
        /// @param aMethodName - the decided method name.
        /// @param aData - the response data for the decided payment method.
        /// @param aPayerName - the payer's name.
        /// @param aPayerEmail - the payer's email.
        /// @param aPayerPhone - the payer's phone.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId, uint aAcceptStatus, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aMethodName, [MarshalAs(UnmanagedType.Interface)] nsIPaymentResponseData aData, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerName, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerEmail, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aPayerPhone);
	}
	
	/// <summary>
    /// The response for abort action.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8c72bcdb-0c37-4786-a9e5-510afa2f8ede")]
	public interface nsIPaymentAbortActionResponse : nsIPaymentActionResponse
	{
		
		/// <summary>
        /// The payment request identity.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetRequestIdAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId);
		
		/// <summary>
        /// The response type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// The abort action status.
        /// Using the defined consts(ABORT_XXX) in nsIPaymentActionResponse.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetAbortStatusAttribute();
		
		/// <summary>
        /// The Initial method.
        /// @param aRequestId - the request identifier of payment request.
        /// @param aAbortStatus - the abort action result.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId, uint aAbortStatus);
		
		/// <summary>
        /// Check if the abort action is succeeded
        /// </summary>
		[return: MarshalAs(UnmanagedType.U1)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsSucceeded();
	}
	
	/// <summary>nsIPaymentCompleteActionResponse </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("62c01e69-9ca4-4060-99e4-b95f628c8e6d")]
	public interface nsIPaymentCompleteActionResponse : nsIPaymentActionResponse
	{
		
		/// <summary>
        /// The payment request identity.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetRequestIdAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId);
		
		/// <summary>
        /// The response type.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetTypeAttribute();
		
		/// <summary>
        /// The complete action status.
        /// Using the defined consts(COMPLETE_XXX) in nsIPaymentActionResponse.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetCompleteStatusAttribute();
		
		/// <summary>
        /// The Initial method.
        /// @param aRequestId - the request identifier of payment request.
        /// @param aCompleteStatus - the complete action result.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aRequestId, uint aCompleteStatus);
		
		/// <summary>
        /// Check if the complete action is succeeded.
        /// </summary>
		[return: MarshalAs(UnmanagedType.U1)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsCompleted();
	}
}
