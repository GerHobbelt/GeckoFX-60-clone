// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIURIWithBlobImpl.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// nsIURIWithBlobImpl is implemented by URIs which are associated with a
    /// specific BlobImpl.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("331b41d3-3506-4ab5-bef9-aab41e3202a3")]
	public interface nsIURIWithBlobImpl
	{
		
		/// <summary>
        /// The BlobImpl associated with the resource returned when loading this uri.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetBlobImplAttribute();
	}
	
	/// <summary>nsIBlobURIMutator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d3e8c9fa-ff07-47cc-90dc-0cc5445ddb59")]
	public interface nsIBlobURIMutator
	{
		
		/// <summary>
        /// Associates a blobImpl to the mutated URI.
        /// Would normally return nsIURIMutator, but since it only gets called
        /// from C++, there is no need for that.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBlobImpl(nsISupports blobImpl);
	}
}
