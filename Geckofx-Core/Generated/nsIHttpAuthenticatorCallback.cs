// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIHttpAuthenticatorCallback.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this
    /// file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d989cb03-e446-4086-b9e6-46842cb97bd5")]
	public interface nsIHttpAuthenticatorCallback
	{
		
		/// <summary>
        /// Authentication data for a header is available.
        ///
        /// @param aCreds
        /// Credentials which were obtained asynchonously.
        /// @param aFlags
        /// Flags set by asynchronous call.
        /// @param aResult
        /// Result status of credentials generation
        /// @param aSessionState
        /// Modified session state to be passed to caller
        /// @param aContinuationState
        /// Modified continuation state to be passed to caller
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnCredsGenerated([MarshalAs(UnmanagedType.LPStr)] string aCreds, uint aFlags, int aResult, [MarshalAs(UnmanagedType.Interface)] nsISupports aSessionsState, [MarshalAs(UnmanagedType.Interface)] nsISupports aContinuationState);
	}
}
