// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsILoginReputation.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this
    /// file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("6219f9da-297e-446d-8d47-ccdd8e72a1d5")]
	public interface nsILoginReputationVerdictType
	{
	}
	
	/// <summary>nsILoginReputationVerdictTypeConsts </summary>
	public class nsILoginReputationVerdictTypeConsts
	{
		
		// <summary>
        //This Source Code Form is subject to the terms of the Mozilla Public
        // License, v. 2.0. If a copy of the MPL was not distributed with this
        // file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
		public const ulong UNSPECIFIED = 0;
		
		// 
		public const ulong SAFE = 1;
		
		// 
		public const ulong LOW_REPUTATION = 2;
		
		// 
		public const ulong PHISHING = 3;
	}
	
	/// <summary>nsILoginReputationQuery </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c21ffe59-595f-46c8-9052-fefb639e196e")]
	public interface nsILoginReputationQuery
	{
		
		/// <summary>Member GetFormURIAttribute </summary>
		/// <returns>A nsIURI</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetFormURIAttribute();
	}
	
	/// <summary>nsILoginReputationQueryCallback </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b527be1e-8fbb-41d9-bee4-267a71236368")]
	public interface nsILoginReputationQueryCallback
	{
		
		/// <summary>
        /// interface.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnComplete(int aStatus, uint aVerdict);
	}
	
	/// <summary>nsILoginReputationService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("1b3f1dfe-ce3a-486b-953e-ce5ac863eff9")]
	public interface nsILoginReputationService
	{
		
		/// <summary>Member Init </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init();
		
		/// <summary>
        /// to parent.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void QueryReputationAsync([MarshalAs(UnmanagedType.Interface)] nsIDOMHTMLInputElement aInput, [MarshalAs(UnmanagedType.Interface)] nsILoginReputationQueryCallback aCallback);
		
		/// <summary>
        /// QueryReputation can only be called from parent
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void QueryReputation([MarshalAs(UnmanagedType.Interface)] nsILoginReputationQuery aQuery, [MarshalAs(UnmanagedType.Interface)] nsILoginReputationQueryCallback aCallback);
	}
}
